diff --git a/src/core/chuck_emit.cpp b/src/core/chuck_emit.cpp
index a4353d2..f0b7acd 100644
--- a/src/core/chuck_emit.cpp
+++ b/src/core/chuck_emit.cpp
@@ -2466,11 +2466,11 @@ t_CKBOOL emit_engine_emit_op_chuck( Chuck_Emitter * emit, a_Exp lhs, a_Exp rhs,
     }
     
     // ugen[] => ugen[] (or permutation)
-    if( ( isa( left, emit->env->t_ugen ) || ( isa( left, emit->env->t_array ) && isa( left->array_type, emit->env->t_ugen ) ) ) &&
-        ( isa( right, emit->env->t_ugen ) || ( isa( right, emit->env->t_array ) && isa( right->array_type, emit->env->t_ugen ) ) ) )
+    if( ( isa( left, emit->env->t_ugen ) || ( isa( left, emit->env->t_carray ) && isa( left->array_type, emit->env->t_ugen ) ) ) &&
+        ( isa( right, emit->env->t_ugen ) || ( isa( right, emit->env->t_carray ) && isa( right->array_type, emit->env->t_ugen ) ) ) )
     {
         // link, flag as NOT unchuck
-        emit->append( instr = new Chuck_Instr_UGen_Array_Link( isa( left, emit->env->t_array ), isa( right, emit->env->t_array ) ) );
+        emit->append( instr = new Chuck_Instr_UGen_Array_Link( isa( left, emit->env->t_carray ), isa( right, emit->env->t_carray ) ) );
         instr->set_linepos( lhs->linepos );
         // done
         return TRUE;
@@ -3631,7 +3631,7 @@ check_func:
     // the type of the base
     Chuck_Type * t_base = member->t_base;
     // is the base a class/namespace or a variable
-    t_CKBOOL base_static = isa( member->t_base, emit->env->t_class );
+    t_CKBOOL base_static = isa( member->t_base, emit->env->t_cclass );
     // a function
     Chuck_Func * func = NULL;
     // a non-function value
@@ -3701,7 +3701,7 @@ t_CKBOOL emit_engine_emit_exp_dot_member( Chuck_Emitter * emit,
     // whether to emit addr or value
     t_CKBOOL emit_addr = member->self->emit_var;
     // is the base a class/namespace or a variable
-    t_CKBOOL base_static = isa( member->t_base, emit->env->t_class );
+    t_CKBOOL base_static = isa( member->t_base, emit->env->t_cclass );
     // a function
     Chuck_Func * func = NULL;
     // a non-function value
@@ -4934,7 +4934,7 @@ t_CKBOOL emit_engine_emit_symbol( Chuck_Emitter * emit, S_Symbol symbol,
         {
             global_type = te_globalUGen;
         }
-        else if( isa( v->type, emit->env->t_array ) )
+        else if( isa( v->type, emit->env->t_carray ) )
         {
             global_type = te_globalArraySymbol;
         }
diff --git a/src/core/chuck_instr.cpp b/src/core/chuck_instr.cpp
index aca6426..4a4095a 100644
--- a/src/core/chuck_instr.cpp
+++ b/src/core/chuck_instr.cpp
@@ -5059,7 +5059,7 @@ void Chuck_Instr_Array_Init::execute( Chuck_VM * vm, Chuck_VM_Shred * shred )
         // problem
         if( !array ) goto out_of_memory;
         // initialize object
-        initialize_object( array, vm->env()->t_array );
+        initialize_object( array, vm->env()->t_carray );
         // set array type
         array->m_array_type = m_type_ref;
         m_type_ref->add_ref();
@@ -5082,7 +5082,7 @@ void Chuck_Instr_Array_Init::execute( Chuck_VM * vm, Chuck_VM_Shred * shred )
         // fill array
         t_CKFLOAT * sp = (t_CKFLOAT *)reg_sp;
         // intialize object
-        initialize_object( array, vm->env()->t_array );
+        initialize_object( array, vm->env()->t_carray );
         // set array type
         array->m_array_type = m_type_ref;
         m_type_ref->add_ref();
@@ -5105,7 +5105,7 @@ void Chuck_Instr_Array_Init::execute( Chuck_VM * vm, Chuck_VM_Shred * shred )
         // fill array
         t_CKCOMPLEX * sp = (t_CKCOMPLEX *)reg_sp;
         // intialize object
-        initialize_object( array, vm->env()->t_array );
+        initialize_object( array, vm->env()->t_carray );
         // set array type
         array->m_array_type = m_type_ref;
         m_type_ref->add_ref();
@@ -5128,7 +5128,7 @@ void Chuck_Instr_Array_Init::execute( Chuck_VM * vm, Chuck_VM_Shred * shred )
         // fill array
         t_CKVEC3 * sp = (t_CKVEC3 *)reg_sp;
         // intialize object
-        initialize_object( array, vm->env()->t_array );
+        initialize_object( array, vm->env()->t_carray );
         // set array type
         array->m_array_type = m_type_ref;
         m_type_ref->add_ref();
@@ -5151,7 +5151,7 @@ void Chuck_Instr_Array_Init::execute( Chuck_VM * vm, Chuck_VM_Shred * shred )
         // fill array
         t_CKVEC4 * sp = (t_CKVEC4 *)reg_sp;
         // intialize object
-        initialize_object( array, vm->env()->t_array );
+        initialize_object( array, vm->env()->t_carray );
         // set array type
         array->m_array_type = m_type_ref;
         m_type_ref->add_ref();
@@ -5273,7 +5273,7 @@ Chuck_Object * do_alloc_array( Chuck_VM * vm, // REFACTOR-2017: added
             }
 
             // initialize object
-            initialize_object( base, vm->env()->t_array );
+            initialize_object( base, vm->env()->t_carray );
             return base;
         }
         else if( kind == kindof_FLOAT ) // ISSUE: 64-bit (fixed 1.3.1.0)
@@ -5282,7 +5282,7 @@ Chuck_Object * do_alloc_array( Chuck_VM * vm, // REFACTOR-2017: added
             if( !base ) goto out_of_memory;
             
             // initialize object
-            initialize_object( base, vm->env()->t_array );
+            initialize_object( base, vm->env()->t_carray );
             return base;
         }
         else if( kind == kindof_COMPLEX ) // ISSUE: 64-bit (fixed 1.3.1.0)
@@ -5291,7 +5291,7 @@ Chuck_Object * do_alloc_array( Chuck_VM * vm, // REFACTOR-2017: added
             if( !base ) goto out_of_memory;
             
             // initialize object
-            initialize_object( base, vm->env()->t_array );
+            initialize_object( base, vm->env()->t_carray );
             return base;
         }
         else if( kind == kindof_VEC3 ) // 1.3.5.3
@@ -5300,7 +5300,7 @@ Chuck_Object * do_alloc_array( Chuck_VM * vm, // REFACTOR-2017: added
             if( !base ) goto out_of_memory;
             
             // initialize object
-            initialize_object( base, vm->env()->t_array );
+            initialize_object( base, vm->env()->t_carray );
             return base;
         }
         else if( kind == kindof_VEC4 ) // 1.3.5.3
@@ -5309,7 +5309,7 @@ Chuck_Object * do_alloc_array( Chuck_VM * vm, // REFACTOR-2017: added
             if( !base ) goto out_of_memory;
             
             // initialize object
-            initialize_object( base, vm->env()->t_array );
+            initialize_object( base, vm->env()->t_carray );
             return base;
         }
 
@@ -5333,7 +5333,7 @@ Chuck_Object * do_alloc_array( Chuck_VM * vm, // REFACTOR-2017: added
     }
 
     // initialize object
-    initialize_object( base, vm->env()->t_array );
+    initialize_object( base, vm->env()->t_carray );
     return base;
 
 out_of_memory:
@@ -6257,11 +6257,11 @@ void Chuck_Instr_Dot_Static_Data::execute( Chuck_VM * vm, Chuck_VM_Shred * shred
     // pop the type pointer
     pop_( sp, 1 );
     // get the object pointer
-    Chuck_Type * t_class = (Chuck_Type *)(*sp);
+    Chuck_Type * t_cclass = (Chuck_Type *)(*sp);
     // make sure
-    assert( (m_offset + m_size) <= t_class->info->class_data_size );
+    assert( (m_offset + m_size) <= t_cclass->info->class_data_size );
     // calculate the data pointer
-    data = (t_CKUINT)(t_class->info->class_data + m_offset);
+    data = (t_CKUINT)(t_cclass->info->class_data + m_offset);
     
     // emit addr or value
     if( m_emit_addr )
diff --git a/src/core/chuck_io.cpp b/src/core/chuck_io.cpp
index c2596c6..6c4eed7 100644
--- a/src/core/chuck_io.cpp
+++ b/src/core/chuck_io.cpp
@@ -3330,7 +3330,7 @@ Chuck_Array * Chuck_IO_Serial::getBytes()
        r.m_status == Request::RQ_STATUS_SUCCESS)
     {
         arr = (Chuck_Array *) r.m_val;
-        initialize_object(arr, m_vmRef->env()->t_array);
+        initialize_object(arr, m_vmRef->env()->t_carray);
         m_asyncResponses.get(r);
     }
     
@@ -3353,7 +3353,7 @@ Chuck_Array * Chuck_IO_Serial::getInts()
        r.m_type == TYPE_INT && r.m_status == Request::RQ_STATUS_SUCCESS)
     {
         arr = (Chuck_Array *) r.m_val;
-        initialize_object(arr, m_vmRef->env()->t_array);
+        initialize_object(arr, m_vmRef->env()->t_carray);
         m_asyncResponses.get(r);
     }
     
@@ -3376,7 +3376,7 @@ Chuck_Array * Chuck_IO_Serial::getFloats()
        r.m_type == TYPE_FLOAT && r.m_status == Request::RQ_STATUS_SUCCESS)
     {
         arr = (Chuck_Array *) r.m_val;
-        initialize_object(arr, m_vmRef->env()->t_array);
+        initialize_object(arr, m_vmRef->env()->t_carray);
         m_asyncResponses.get(r);
     }
     
@@ -4269,7 +4269,7 @@ CK_DLL_SFUN( serialio_list )
     
     // ISSUE: 64-bit
     Chuck_Array4 * array = new Chuck_Array4(TRUE, 0);
-    initialize_object( array, SHRED->vm_ref->env()->t_array );
+    initialize_object( array, SHRED->vm_ref->env()->t_carray );
     
     for(vector<string>::iterator i = devices.begin(); i != devices.end(); i++)
     {
diff --git a/src/core/chuck_lang.cpp b/src/core/chuck_lang.cpp
index 1ac78af..43069ed 100644
--- a/src/core/chuck_lang.cpp
+++ b/src/core/chuck_lang.cpp
@@ -1466,13 +1466,13 @@ CK_DLL_CTOR( uanablob_ctor )
     OBJ_MEMBER_TIME(SELF, uanablob_offset_when) = 0;
     // fvals
     Chuck_Array8 * arr8 = new Chuck_Array8( 8 );
-    initialize_object( arr8, SHRED->vm_ref->env()->t_array );
+    initialize_object( arr8, SHRED->vm_ref->env()->t_carray );
     // TODO: check out of memory
     arr8->add_ref();
     OBJ_MEMBER_INT(SELF, uanablob_offset_fvals) = (t_CKINT)arr8;
     // cvals
     Chuck_Array16 * arr16 = new Chuck_Array16( 8 );
-    initialize_object( arr16, SHRED->vm_ref->env()->t_array );
+    initialize_object( arr16, SHRED->vm_ref->env()->t_carray );
     // TODO: check out of memory
     arr16->add_ref();
     OBJ_MEMBER_INT(SELF, uanablob_offset_cvals) = (t_CKINT)arr16;
diff --git a/src/core/chuck_oo.cpp b/src/core/chuck_oo.cpp
index 8666737..b12a322 100644
--- a/src/core/chuck_oo.cpp
+++ b/src/core/chuck_oo.cpp
@@ -2992,7 +2992,7 @@ Chuck_Array4 * Chuck_IO_File::dirList()
     {
         EM_error3( "[chuck](via FileIO): cannot get list: no directory open" );
         Chuck_Array4 *ret = new Chuck_Array4( TRUE, 0 );
-        initialize_object( ret, m_vmRef->env()->t_array );
+        initialize_object( ret, m_vmRef->env()->t_carray );
         return ret;
     }
 
@@ -3014,7 +3014,7 @@ Chuck_Array4 * Chuck_IO_File::dirList()
 
     // make array
     Chuck_Array4 *array = new Chuck_Array4( true, entrylist.size() );
-    initialize_object( array, m_vmRef->env()->t_array );
+    initialize_object( array, m_vmRef->env()->t_carray );
     for ( int i = 0; i < entrylist.size(); i++ )
         array->set( i, (t_CKUINT) entrylist[i] );
     return array;
diff --git a/src/core/chuck_scan.cpp b/src/core/chuck_scan.cpp
index 73fa403..9e98312 100644
--- a/src/core/chuck_scan.cpp
+++ b/src/core/chuck_scan.cpp
@@ -325,7 +325,7 @@ t_CKBOOL type_engine_scan0_class_def( Chuck_Env * env, a_Class_Def class_def )
         Chuck_Type * type = NULL;
 
         // allocate value
-        type = env->t_class->copy( env );
+        type = env->t_cclass->copy( env );
         type->actual_type = the_class;
         value = env->context->new_Chuck_Value( type, the_class->name );
         value->owner = env->curr;
@@ -1348,7 +1348,7 @@ t_CKBOOL type_engine_scan1_func_def( Chuck_Env * env, a_Func_Def f )
         // create the new array type
         t = new_array_type(
             env,  // the env
-            env->t_array,  // the array base class
+            env->t_carray,  // the array base class
             f->type_decl->array->depth,  // the depth of the new type
             t2,  // the 'array_type'
             env->curr  // the owner namespace
@@ -2227,7 +2227,7 @@ t_CKBOOL type_engine_scan2_exp_decl( Chuck_Env * env, a_Exp_Decl decl )
             // create the new array type
             type = new_array_type(
                 env,  // the env
-                env->t_array,  // the array base class
+                env->t_carray,  // the array base class
                 var_decl->array->depth,  // the depth of the new type
                 t2,  // the 'array_type'
                 env->curr  // the owner namespace
@@ -2650,7 +2650,7 @@ t_CKBOOL type_engine_scan2_func_def( Chuck_Env * env, a_Func_Def f )
             // create the new array type
             t = new_array_type(
                 env,  // the env
-                env->t_array,  // the array base class
+                env->t_carray,  // the array base class
                 arg_list->var_decl->array->depth,  // the depth of the new type
                 t2,  // the 'array_type'
                 env->curr  // the owner namespace
diff --git a/src/core/chuck_type.cpp b/src/core/chuck_type.cpp
index 22d6ae4..9c38ba9 100644
--- a/src/core/chuck_type.cpp
+++ b/src/core/chuck_type.cpp
@@ -64,7 +64,7 @@ using namespace std;
 //Chuck_Type t_null( te_null, "@null", NULL, sizeof(void *) );
 //Chuck_Type t_function( te_function, "@function", &t_object, sizeof(void *) );
 //Chuck_Type t_object( te_object, "Object", NULL, sizeof(void *) );
-//Chuck_Type t_array( te_array, "@array", &t_object, sizeof(void *) );
+//Chuck_Type t_carray( te_array, "@array", &t_object, sizeof(void *) );
 //Chuck_Type t_string( te_string, "string", &t_object, sizeof(void *) );
 //Chuck_Type t_event( te_event, "Event", &t_object, sizeof(void *) );
 //Chuck_Type t_ugen( te_ugen, "UGen", &t_object, sizeof(void *) );
@@ -76,7 +76,7 @@ using namespace std;
 //Chuck_Type t_chout( te_chout, "StdOut", &t_io, sizeof(void *) );
 //Chuck_Type t_cherr( te_cherr, "StdErr", &t_io, sizeof(void *) );
 //Chuck_Type t_thread( te_thread, "Thread", &t_object, sizeof(void *) );
-//Chuck_Type t_class( te_class, "Class", &t_object, sizeof(void *) );
+//Chuck_Type t_cclass( te_class, "Class", &t_object, sizeof(void *) );
 
 // exile
 //struct Chuck_Type t_adc = { te_adc, "adc", &t_ugen, t_ugen.size };
@@ -182,7 +182,7 @@ Chuck_Env::Chuck_Env( )
     t_null = new Chuck_Type( this, te_null, "@null", NULL, sizeof(void *) );
     t_object = new Chuck_Type( this, te_object, "Object", NULL, sizeof(void *) );
     t_function = new Chuck_Type( this, te_function, "@function", t_object, sizeof(void *) );
-    t_array = new Chuck_Type ( this, te_array, "@array", t_object, sizeof(void *) );
+    t_carray = new Chuck_Type ( this, te_array, "@array", t_object, sizeof(void *) );
     t_string = new Chuck_Type( this, te_string, "string", t_object, sizeof(void *) );
     t_event = new Chuck_Type( this, te_event, "Event", t_object, sizeof(void *) );
     t_ugen = new Chuck_Type( this, te_ugen, "UGen", t_object, sizeof(void *) );
@@ -196,7 +196,7 @@ Chuck_Env::Chuck_Env( )
     t_chout = new Chuck_Type( this, te_chout, "StdOut", t_io, sizeof(void *) );
     t_cherr = new Chuck_Type( this, te_cherr, "StdErr", t_io, sizeof(void *) );
     t_thread = new Chuck_Type( this, te_thread, "Thread", t_object, sizeof(void *) );
-    t_class = new Chuck_Type( this, te_class, "Class", t_object, sizeof(void *) );
+    t_cclass = new Chuck_Type( this, te_class, "Class", t_object, sizeof(void *) );
     
     // REFACTOR-2017: carrier
     m_carrier = NULL;
@@ -213,14 +213,14 @@ Chuck_Env::~Chuck_Env()
 {
     // REFACTOR-2017: now part of Env instance
     SAFE_RELEASE( t_object->info );
-    SAFE_RELEASE( t_array->info );
+    SAFE_RELEASE( t_carray->info );
     SAFE_RELEASE( t_string->info );
     SAFE_RELEASE( t_ugen->info );
     SAFE_RELEASE( t_uanablob->info );
     SAFE_RELEASE( t_uana->info );
     SAFE_RELEASE( t_shred->info );
     SAFE_RELEASE( t_event->info );
-    SAFE_RELEASE( t_class->info );
+    SAFE_RELEASE( t_cclass->info );
     SAFE_RELEASE( t_thread->info );
     SAFE_RELEASE( t_io->info );
     #ifndef __DISABLE_FILEIO__
@@ -234,14 +234,14 @@ Chuck_Env::~Chuck_Env()
     SAFE_RELEASE( t_adc->info ); // REFACTOR-2017
     
     SAFE_DELETE( t_object );
-    SAFE_DELETE( t_array );
+    SAFE_DELETE( t_carray );
     SAFE_DELETE( t_string );
     SAFE_DELETE( t_ugen );
     SAFE_DELETE( t_uanablob );
     SAFE_DELETE( t_uana );
     SAFE_DELETE( t_shred );
     SAFE_DELETE( t_event );
-    SAFE_DELETE( t_class );
+    SAFE_DELETE( t_cclass );
     SAFE_DELETE( t_thread );
     SAFE_DELETE( t_io );
     #ifndef __DISABLE_FILEIO__
@@ -299,8 +299,8 @@ Chuck_Env * type_engine_init( Chuck_Carrier * carrier )
     env->global()->type.add( env->t_shred->name, env->t_shred );        env->t_shred->lock();
     env->global()->type.add( env->t_thread->name, env->t_thread );      env->t_thread->lock();
     env->global()->type.add( env->t_function->name, env->t_function );  env->t_function->lock();
-    env->global()->type.add( env->t_class->name, env->t_class );        env->t_class->lock();
-    env->global()->type.add( env->t_array->name, env->t_array );        env->t_array->lock();
+    env->global()->type.add( env->t_cclass->name, env->t_cclass );        env->t_cclass->lock();
+    env->global()->type.add( env->t_carray->name, env->t_carray );        env->t_carray->lock();
     env->global()->type.add( env->t_event->name, env->t_event );        env->t_event->lock();
     env->global()->type.add( env->t_io->name, env->t_io );              env->t_io->lock();
     #ifndef __DISABLE_FILEIO__
@@ -324,7 +324,7 @@ Chuck_Env * type_engine_init( Chuck_Carrier * carrier )
     EM_log( CK_LOG_SEVERE, "adding base classes..." );
     EM_pushlog();
     init_class_object( env, env->t_object );
-    init_class_array( env, env->t_array );
+    init_class_array( env, env->t_carray );
     init_class_string( env, env->t_string );
     init_class_ugen( env, env->t_ugen );
     init_class_blob( env, env->t_uanablob );
@@ -341,8 +341,8 @@ Chuck_Env * type_engine_init( Chuck_Carrier * carrier )
     init_class_vec4( env, env->t_vec4 ); // 1.3.5.3
 
     EM_log( CK_LOG_SEVERE, "class 'class'" );
-    env->t_class->info = new Chuck_Namespace;
-    env->t_class->info->add_ref();
+    env->t_cclass->info = new Chuck_Namespace;
+    env->t_cclass->info->add_ref();
     env->t_thread->info = new Chuck_Namespace;
     env->t_thread->info->add_ref();
 
@@ -365,7 +365,7 @@ Chuck_Env * type_engine_init( Chuck_Carrier * carrier )
     env->global()->value.add( "false", new Chuck_Value( env->t_int, "false", new t_CKINT(0), TRUE ) );
     env->global()->value.add( "maybe", new Chuck_Value( env->t_int, "maybe", new t_CKFLOAT(.5), FALSE ) );
     env->global()->value.add( "pi", new Chuck_Value( env->t_float, "pi", new t_CKFLOAT(ONE_PI), TRUE ) );
-    env->global()->value.add( "global", new Chuck_Value( env->t_class, "global", env->global(), TRUE ) );
+    env->global()->value.add( "global", new Chuck_Value( env->t_cclass, "global", env->global(), TRUE ) );
     env->global()->value.add( "chout", new Chuck_Value( env->t_io, "chout", new Chuck_IO_Chout( carrier ), TRUE ) );
     env->global()->value.add( "cherr", new Chuck_Value( env->t_io, "cherr", new Chuck_IO_Cherr( carrier ), TRUE ) );
 
@@ -1542,7 +1542,7 @@ t_CKTYPE type_engine_check_op( Chuck_Env * env, ae_Operator op, a_Exp lhs, a_Exp
         }
 
         // array
-        if( op == ae_op_shift_left && isa( left, env->t_array ) )
+        if( op == ae_op_shift_left && isa( left, env->t_carray ) )
         {
             // type of array
             Chuck_Type * atype = left->array_type;
@@ -1805,7 +1805,7 @@ t_CKTYPE type_engine_check_op( Chuck_Env * env, ae_Operator op, a_Exp lhs, a_Exp
     case ae_op_s_or:
     case ae_op_shift_left:
         // prepend || append
-        if( isa( left, env->t_array ) )
+        if( isa( left, env->t_carray ) )
         {
             // sanity check
             assert( left->array_type != NULL );
@@ -1874,13 +1874,13 @@ t_CKTYPE type_engine_check_op_chuck( Chuck_Env * env, a_Exp lhs, a_Exp rhs,
 
     // ugen => ugen
     // ugen[] => ugen[]
-    if( ( isa( left, env->t_ugen ) || ( isa( left, env->t_array ) && isa( left->array_type, env->t_ugen ) ) ) &&
-        ( isa( right, env->t_ugen ) || ( isa( right, env->t_array ) && isa( right->array_type, env->t_ugen ) ) ) )
+    if( ( isa( left, env->t_ugen ) || ( isa( left, env->t_carray ) && isa( left->array_type, env->t_ugen ) ) ) &&
+        ( isa( right, env->t_ugen ) || ( isa( right, env->t_carray ) && isa( right->array_type, env->t_ugen ) ) ) )
     {
         t_CKTYPE left_ugen_type = NULL;
         t_CKTYPE right_ugen_type = NULL;
         
-        if( isa( left, env->t_array ) )
+        if( isa( left, env->t_carray ) )
         {
             left_ugen_type = left->array_type;
             
@@ -1904,7 +1904,7 @@ t_CKTYPE type_engine_check_op_chuck( Chuck_Env * env, a_Exp lhs, a_Exp rhs,
             left_ugen_type = left;
         }
         
-        if( isa( right, env->t_array ) )
+        if( isa( right, env->t_carray ) )
         {
             right_ugen_type = right->array_type;
             
@@ -2117,13 +2117,13 @@ t_CKTYPE type_engine_check_op_at_chuck( Chuck_Env * env, a_Exp lhs, a_Exp rhs )
     t_CKTYPE left = lhs->type, right = rhs->type;
 
     // static
-    //if( isa( left, env->t_class ) )
+    //if( isa( left, env->t_cclass ) )
     //{
     //    EM_error2( lhs->linepos,
     //        "cannot assign '@=>' using static class as left operand..." );
     //    return NULL;
     //}
-    //else if( isa( right, env->t_class ) )
+    //else if( isa( right, env->t_cclass ) )
     //{
     //    EM_error2( rhs->linepos,
     //        "cannot assign '@=>' using static class as right operand..." );
@@ -2275,7 +2275,7 @@ t_CKTYPE type_engine_check_exp_unary( Chuck_Env * env, a_Exp_Unary unary )
                 // create the new array type, replace t
                 t = new_array_type(
                     env,  // the env
-                    env->t_array,  // the array base class, usually env->t_array
+                    env->t_carray,  // the array base class, usually env->t_carray
                     unary->array->depth,  // the depth of the new type
                     t,  // the 'array_type'
                     env->curr  // the owner namespace
@@ -2658,7 +2658,7 @@ t_CKTYPE type_engine_check_exp_array_lit( Chuck_Env * env, a_Exp_Primary exp )
     // create the new array type
     t = new_array_type(
         env,  // the env
-        env->t_array,  // the array base class, usually env->t_array
+        env->t_carray,  // the array base class, usually env->t_carray
         type->array_depth + 1,  // the depth of the new type
         type->array_depth ? type->array_type : type,  // the 'array_type'
         env->curr  // the owner namespace
@@ -2672,16 +2672,16 @@ t_CKTYPE type_engine_check_exp_array_lit( Chuck_Env * env, a_Exp_Primary exp )
     // set the name
     t->name = type->name;
     // set the parent
-    t->parent = env->t_array;
+    t->parent = env->t_carray;
     // is a ref
-    t->size = t_array.size;
+    t->size = t_carray.size;
     // set the array depth
     t->array_depth = type->array_depth + 1;
     // set the base type
     t->array_type = type->array_depth ? type->array_type : type;
     // TODO: verify the following is correct
     // set namespace
-    t->info = t_array->info;
+    t->info = t_carray->info;
     // add reference
     t->info->add_ref();
     // set owner
@@ -3238,7 +3238,7 @@ string type_engine_print_exp_dot_member( Chuck_Env * env, a_Exp_Dot_Member membe
     if( !member->t_base ) return "[error]";
 
     // is the base a class/namespace or a variable
-    base_static = isa( member->t_base, env->t_class );
+    base_static = isa( member->t_base, env->t_cclass );
     // actual type
     the_base = base_static ? member->t_base->actual_type : member->t_base;
 
@@ -3596,7 +3596,7 @@ check_func:
     t_CKBOOL base_static = FALSE;
 
     // is the base a class/namespace or a variable
-    base_static = isa( member->t_base, env->t_class );
+    base_static = isa( member->t_base, env->t_cclass );
     // actual type
     the_base = base_static ? member->t_base->actual_type : member->t_base;
     
@@ -3655,7 +3655,7 @@ t_CKTYPE type_engine_check_exp_dot_member( Chuck_Env * env, a_Exp_Dot_Member mem
     }
 
     // is the base a class/namespace or a variable
-    base_static = isa( member->t_base, env->t_class );
+    base_static = isa( member->t_base, env->t_cclass );
     // actual type
     the_base = base_static ? member->t_base->actual_type : member->t_base;
 
@@ -5130,7 +5130,7 @@ Chuck_Type * type_engine_import_class_begin( Chuck_Env * env, Chuck_Type * type,
     // flag as complete
     type->is_complete = TRUE;
     // make type
-    type_type = env->t_class->copy( env );
+    type_type = env->t_cclass->copy( env );
     type_type->actual_type = type;
     // SAFE_REF_ASSIGN( type_type->actual_type, type );
 
diff --git a/src/core/chuck_type.h b/src/core/chuck_type.h
index e7f8134..993dd83 100644
--- a/src/core/chuck_type.h
+++ b/src/core/chuck_type.h
@@ -525,7 +525,7 @@ public:
     Chuck_Type * t_null;
     Chuck_Type * t_function;
     Chuck_Type * t_object;
-    Chuck_Type * t_array;
+    Chuck_Type * t_carray;
     Chuck_Type * t_string;
     Chuck_Type * t_event;
     Chuck_Type * t_ugen;
@@ -539,7 +539,7 @@ public:
     Chuck_Type * t_chout;
     Chuck_Type * t_cherr;
     Chuck_Type * t_thread;
-    Chuck_Type * t_class;
+    Chuck_Type * t_cclass;
     Chuck_Type * t_dac;
     Chuck_Type * t_adc;
 };
@@ -923,11 +923,11 @@ t_CKINT str2char( const char * char_lit, int linepos );
 //extern Chuck_Type t_object;
 //extern Chuck_Type t_null;
 //extern Chuck_Type t_string;
-//extern Chuck_Type t_array;
+//extern Chuck_Type t_carray;
 //extern Chuck_Type t_shred;
 //extern Chuck_Type t_thread;
 //extern Chuck_Type t_function;
-//extern Chuck_Type t_class;
+//extern Chuck_Type t_cclass;
 //extern Chuck_Type t_event;
 //extern Chuck_Type t_io;
 //extern Chuck_Type t_fileio;
diff --git a/src/core/uana_xform.cpp b/src/core/uana_xform.cpp
index 1a24a3a..d96d631 100644
--- a/src/core/uana_xform.cpp
+++ b/src/core/uana_xform.cpp
@@ -303,7 +303,7 @@ DLL_QUERY xform_query( Chuck_DL_Query * QUERY )
 
     // initialize static data
     Windowing_array = new Chuck_Array8();
-    initialize_object( Windowing_array, QUERY->env()->t_array );
+    initialize_object( Windowing_array, QUERY->env()->t_carray );
     // TODO: yes? reference count
     Windowing_array->add_ref();
     // set size
diff --git a/src/core/ugen_stk.cpp b/src/core/ugen_stk.cpp
index d2d1827..5b2c23b 100644
--- a/src/core/ugen_stk.cpp
+++ b/src/core/ugen_stk.cpp
@@ -20093,7 +20093,7 @@ ck_domidi ( Instrmnt * inst, unsigned char status, unsigned char data1, unsigned
     unsigned char type = status && 0xf0; 
     switch ( type ) { 
     case __SK_NoteOn_: 
-      inst->noteOn( mtof ( (float)data1 ), ((float)data2) / 128.0 );
+      inst->noteOn( ck_mtof ( (float)data1 ), ((float)data2) / 128.0 );
       break;
     case __SK_NoteOff_:
       inst->noteOff( ((float)data2) / 128.0 );
@@ -26900,7 +26900,7 @@ CK_DLL_CTRL( Shakers_ctrl_freq )
 {
     Shakers * s = (Shakers *)OBJ_MEMBER_UINT(SELF, Instrmnt_offset_data);
     s->freq = GET_NEXT_FLOAT(ARGS);
-    s->controlChange( __SK_ModWheel_, ftom(s->freq) );
+    s->controlChange( __SK_ModWheel_, ck_ftom(s->freq) );
     RETURN->v_float = (t_CKFLOAT)s->freq;
 }
 
diff --git a/src/core/ulib_machine.cpp b/src/core/ulib_machine.cpp
index 33a939d..2f570d8 100644
--- a/src/core/ulib_machine.cpp
+++ b/src/core/ulib_machine.cpp
@@ -213,7 +213,7 @@ CK_DLL_SFUN( machine_intsize_impl )
 CK_DLL_SFUN( machine_shreds_impl )
 {
     Chuck_Array4 *array = new Chuck_Array4(FALSE);
-    initialize_object(array, SHRED->vm_ref->env()->t_array);
+    initialize_object(array, SHRED->vm_ref->env()->t_carray);
     array->clear();
     
     Chuck_VM_Status status;
diff --git a/src/core/ulib_math.cpp b/src/core/ulib_math.cpp
index ca626f3..07fc331 100644
--- a/src/core/ulib_math.cpp
+++ b/src/core/ulib_math.cpp
@@ -274,34 +274,34 @@ DLL_QUERY libmath_query( Chuck_DL_Query * QUERY )
     // QUERY->add_arg( QUERY, "float", "min" );
     // QUERY->add_arg( QUERY, "float", "max" );
 
-    // add mtof
+    // add ck_mtof
     //! see \example mand-o-matic.ck
-    QUERY->add_sfun( QUERY, mtof_impl, "float", "mtof" ); //! midi note to frequency
+    QUERY->add_sfun( QUERY, mtof_impl, "float", "ck_mtof" ); //! midi note to frequency
     QUERY->add_arg( QUERY, "float", "value" );
     QUERY->doc_func( QUERY, "convert MIDI note number to frequency (Hz)." );
 
-    // add ftom
-    QUERY->add_sfun( QUERY, ftom_impl, "float", "ftom" ); //! frequency to midi note
+    // add ck_ftom
+    QUERY->add_sfun( QUERY, ftom_impl, "float", "ck_ftom" ); //! frequency to midi note
     QUERY->add_arg( QUERY, "float", "value" );
     QUERY->doc_func( QUERY, "convert frequency (Hz) to MIDI note number." );
 
-    // add powtodb
-    QUERY->add_sfun( QUERY, powtodb_impl, "float", "powtodb" ); //! linear power to decibel 
+    // add ck_powtodb
+    QUERY->add_sfun( QUERY, powtodb_impl, "float", "ck_powtodb" ); //! linear power to decibel 
     QUERY->add_arg( QUERY, "float", "value" );
     QUERY->doc_func( QUERY, "convert signal power ratio to decibels (dB)." );
 
-    // add rmstodb
-    QUERY->add_sfun( QUERY, rmstodb_impl, "float", "rmstodb" ); //! rms to decibel
+    // add ck_rmstodb
+    QUERY->add_sfun( QUERY, rmstodb_impl, "float", "ck_rmstodb" ); //! rms to decibel
     QUERY->add_arg( QUERY, "float", "value" );
     QUERY->doc_func( QUERY, "convert linear amplitude to decibels (dB)." );
 
-    // add dbtopow
-    QUERY->add_sfun( QUERY, dbtopow_impl, "float", "dbtopow" ); //! decibel to linear
+    // add ck_dbtopow
+    QUERY->add_sfun( QUERY, dbtopow_impl, "float", "ck_dbtopow" ); //! decibel to linear
     QUERY->add_arg( QUERY, "float", "value" );
     QUERY->doc_func( QUERY, "convert decibels (dB) to signal power ratio." );
 
-    // add dbtorms
-    QUERY->add_sfun( QUERY, dbtorms_impl, "float", "dbtorms" ); //! decibel to rms
+    // add ck_dbtorms
+    QUERY->add_sfun( QUERY, dbtorms_impl, "float", "ck_dbtorms" ); //! decibel to rms
     QUERY->add_arg( QUERY, "float", "value" );
     QUERY->doc_func( QUERY, "convert decibles (dB) to linear amplitude." );
     
diff --git a/src/core/ulib_opsc.cpp b/src/core/ulib_opsc.cpp
index 81d2049..3f6fb75 100644
--- a/src/core/ulib_opsc.cpp
+++ b/src/core/ulib_opsc.cpp
@@ -989,7 +989,7 @@ CK_DLL_CTOR(oscmsg_ctor)
     OBJ_MEMBER_STRING(SELF, oscmsg_offset_typetag) = typetag;
     
     Chuck_Array4 *args = new Chuck_Array4(TRUE);
-    initialize_object(args, SHRED->vm_ref->env()->t_array);
+    initialize_object(args, SHRED->vm_ref->env()->t_carray);
     args->clear();
     SAFE_ADD_REF(args);
     OBJ_MEMBER_OBJECT(SELF, oscmsg_offset_args) = args;
diff --git a/src/core/ulib_std.cpp b/src/core/ulib_std.cpp
index 1418311..a17099b 100644
--- a/src/core/ulib_std.cpp
+++ b/src/core/ulib_std.cpp
@@ -251,34 +251,34 @@ DLL_QUERY libstd_query( Chuck_DL_Query * QUERY )
     QUERY->add_arg( QUERY, "string", "value" );
     QUERY->doc_func( QUERY, "set the value of environment variable named 'key'" );
 
-    // add mtof
+    // add ck_mtof
     //! see \example mand-o-matic.ck
-    QUERY->add_sfun( QUERY, mtof_impl, "float", "mtof" ); //! midi note to frequency
+    QUERY->add_sfun( QUERY, mtof_impl, "float", "ck_mtof" ); //! midi note to frequency
     QUERY->add_arg( QUERY, "float", "value" );
     QUERY->doc_func( QUERY, "convert a MIDI note number to frequency (Hz). MIDI note 60 is Middle C; each whole number is one semitone; the input type is float and supports fractional note numbers." );
 
-    // add ftom
-    QUERY->add_sfun( QUERY, ftom_impl, "float", "ftom" ); //! frequency to midi note
+    // add ck_ftom
+    QUERY->add_sfun( QUERY, ftom_impl, "float", "ck_ftom" ); //! frequency to midi note
     QUERY->add_arg( QUERY, "float", "value" );
     QUERY->doc_func( QUERY, "convert frequency (Hz) to corresponding MIDI note number." );
 
-    // add powtodb
-    QUERY->add_sfun( QUERY, powtodb_impl, "float", "powtodb" ); //! linear power to decibel 
+    // add ck_powtodb
+    QUERY->add_sfun( QUERY, powtodb_impl, "float", "ck_powtodb" ); //! linear power to decibel 
     QUERY->add_arg( QUERY, "float", "value" );
     QUERY->doc_func( QUERY, "convert signal power ratio to decibels (dB)." );
 
-    // add rmstodb
-    QUERY->add_sfun( QUERY, rmstodb_impl, "float", "rmstodb" ); //! rms to decibel
+    // add ck_rmstodb
+    QUERY->add_sfun( QUERY, rmstodb_impl, "float", "ck_rmstodb" ); //! rms to decibel
     QUERY->add_arg( QUERY, "float", "value" );
     QUERY->doc_func( QUERY, "converts rms to decibels (dB)." );
 
-    // add dbtopow
-    QUERY->add_sfun( QUERY, dbtopow_impl, "float", "dbtopow" ); //! decibel to linear
+    // add ck_dbtopow
+    QUERY->add_sfun( QUERY, dbtopow_impl, "float", "ck_dbtopow" ); //! decibel to linear
     QUERY->add_arg( QUERY, "float", "value" );
     QUERY->doc_func( QUERY, "converts decibels (dB) to signal power ratio." );
 
-    // add dbtorms
-    QUERY->add_sfun( QUERY, dbtorms_impl, "float", "dbtorms" ); //! decibel to rms
+    // add ck_dbtorms
+    QUERY->add_sfun( QUERY, dbtorms_impl, "float", "ck_dbtorms" ); //! decibel to rms
     QUERY->add_arg( QUERY, "float", "value" );
     QUERY->doc_func( QUERY, "convert decibles (dB) to RMS." );
 
@@ -769,46 +769,46 @@ CK_DLL_SFUN( setenv_impl )
 }
 
 
-// mtof
+// ck_mtof
 CK_DLL_SFUN( mtof_impl )
 {
     t_CKFLOAT v = GET_CK_FLOAT(ARGS);
-    RETURN->v_float = mtof(v);
+    RETURN->v_float = ck_mtof(v);
 }
 
-// ftom
+// ck_ftom
 CK_DLL_SFUN( ftom_impl )
 {
     t_CKFLOAT v = GET_CK_FLOAT(ARGS);
-    RETURN->v_float = ftom(v);
+    RETURN->v_float = ck_ftom(v);
 }
 
-// powtodb
+// ck_powtodb
 CK_DLL_SFUN( powtodb_impl )
 {
     t_CKFLOAT v = GET_CK_FLOAT(ARGS);
-    RETURN->v_float = powtodb(v);
+    RETURN->v_float = ck_powtodb(v);
 }
 
-// rmstodb
+// ck_rmstodb
 CK_DLL_SFUN( rmstodb_impl )
 {
     t_CKFLOAT v = GET_CK_FLOAT(ARGS);
-    RETURN->v_float = rmstodb(v);
+    RETURN->v_float = ck_rmstodb(v);
 }
 
-// dbtopow
+// ck_dbtopow
 CK_DLL_SFUN( dbtopow_impl )
 {
     t_CKFLOAT v = GET_CK_FLOAT(ARGS);
-    RETURN->v_float = dbtopow(v);
+    RETURN->v_float = ck_dbtopow(v);
 }
 
-// dbtorms
+// ck_dbtorms
 CK_DLL_SFUN( dbtorms_impl )
 {
     t_CKFLOAT v = GET_CK_FLOAT(ARGS);
-    RETURN->v_float = dbtorms(v);
+    RETURN->v_float = ck_dbtorms(v);
 }
 
 CK_DLL_SFUN( dbtolin_impl )
diff --git a/src/core/util_math.c b/src/core/util_math.c
index 5edf94c..68f4847 100644
--- a/src/core/util_math.c
+++ b/src/core/util_math.c
@@ -91,13 +91,13 @@ double ck_remainder( double a, double b )
 
 
 //-----------------------------------------------------------------------------
-// name: mtof()
+// name: ck_mtof()
 // desc: midi to freq
 //-----------------------------------------------------------------------------
-double mtof( double f )
+double ck_mtof( double f )
 {
     if( f <= -1500 ) return (0);
-    else if( f > 1499 ) return (mtof(1499));
+    else if( f > 1499 ) return (ck_mtof(1499));
     // else return (8.17579891564 * exp(.0577622650 * f));
     // TODO: optimize
     else return ( pow(2,(f-69)/12.0) * 440.0 );
@@ -105,10 +105,10 @@ double mtof( double f )
 
 
 //-----------------------------------------------------------------------------
-// name: ftom()
+// name: ck_ftom()
 // desc: freq to midi
 //-----------------------------------------------------------------------------
-double ftom( double f )
+double ck_ftom( double f )
 {   
     // return (f > 0 ? 17.3123405046 * log(.12231220585 * f) : -1500);
     // TODO: optimize
@@ -117,10 +117,10 @@ double ftom( double f )
 
 
 //-----------------------------------------------------------------------------
-// name: powtodb()
+// name: ck_powtodb()
 // desc: ...
 //-----------------------------------------------------------------------------
-double powtodb( double f )
+double ck_powtodb( double f )
 {
     if( f <= 0 ) return (0);
     else
@@ -132,10 +132,10 @@ double powtodb( double f )
 
 
 //-----------------------------------------------------------------------------
-// name: rmstodb()
+// name: ck_rmstodb()
 // desc: ...
 //-----------------------------------------------------------------------------
-double rmstodb( double f )
+double ck_rmstodb( double f )
 {
     if( f <= 0 ) return (0);
     else
@@ -147,10 +147,10 @@ double rmstodb( double f )
 
 
 //-----------------------------------------------------------------------------
-// name: dbtopow()
+// name: ck_dbtopow()
 // desc: ...
 //-----------------------------------------------------------------------------
-double dbtopow( double f )
+double ck_dbtopow( double f )
 {
     if( f <= 0 )
         return (0);
@@ -163,10 +163,10 @@ double dbtopow( double f )
 
 
 //-----------------------------------------------------------------------------
-// name: dbtorms()
+// name: ck_dbtorms()
 // desc: ...
 //-----------------------------------------------------------------------------
-double dbtorms( double f )
+double ck_dbtorms( double f )
 {
     if( f <= 0 )
         return (0);
diff --git a/src/core/util_math.h b/src/core/util_math.h
index e0844a6..ee18ed3 100644
--- a/src/core/util_math.h
+++ b/src/core/util_math.h
@@ -47,18 +47,18 @@ extern "C" {
 // 1.4.1.0 (ge) need this since __WINDOWS_MODERN__ can be defined but remainder still not found (VC++ 2010)
 double ck_remainder( double a, double b );
 
-// mtof
-double mtof( double f );
-// ftom
-double ftom( double f );
-// powtodb
-double powtodb( double f );
-// rmstodb
-double rmstodb( double f );
-// dbtopow
-double dbtopow( double f );
-// dbtorms
-double dbtorms( double f );
+// ck_mtof
+double ck_mtof( double f );
+// ck_ftom
+double ck_ftom( double f );
+// ck_powtodb
+double ck_powtodb( double f );
+// ck_rmstodb
+double ck_rmstodb( double f );
+// ck_dbtopow
+double ck_dbtopow( double f );
+// ck_dbtorms
+double ck_dbtorms( double f );
 // nextpow2
 unsigned long nextpow2( unsigned long i );
 // ensurepow2
